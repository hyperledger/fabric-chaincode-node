# Copyright the Hyperledger Fabric contributors. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

name: Release

on:
  create:
    tags:
      - "v2.*"
  workflow_dispatch:

env:
  CHAINCODE_CONTAINER_NODE_VER: 16
  DOCKER_REGISTRY: ${{ github.repository_owner == 'hyperledger' && 'docker.io' || 'ghcr.io' }}

jobs:
  test:
    uses: ./.github/workflows/test.yaml

  publishnpm:
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/download-artifact@v3
        with:
          name: node-tgzs
          path: build/
      - run: |
          set -xev
          ls -lart build/
          cd build
          find . -type f -name 'fabric-*.tgz' -exec npm publish {} \;
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


  publishdocker:
    runs-on: ubuntu-20.04
    needs: test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug
          config-inline: |
            [worker.oci]
              max-parallelism = 1

      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to the ${{ env.DOCKER_REGISTRY }} Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_REGISTRY == 'docker.io' && secrets.DOCKERHUB_USERNAME || github.actor }}
          password: ${{ env.DOCKER_REGISTRY == 'docker.io' && secrets.DOCKERHUB_TOKEN    || secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ github.repository_owner }}/fabric-nodeenv
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}

      - name: Build and push ${{ matrix.COMPONENT }} Image
        id: push
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          file: docker/fabric-nodeenv/Dockerfile
          context: docker/fabric-nodeenv
          tags: ${{ steps.meta.outputs.tags }}
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NODE_VER=${{ env.CHAINCODE_CONTAINER_NODE_VER }}
